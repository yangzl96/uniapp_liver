<template>
	<view>
		<live-pusher
			id="livePusher"
			ref="livePusher"
			class="livePusher"
			:url="url"
			:mode="mode"
			:enable-camera="enableCamera"
			:auto-focus="true"
			:device-position="position"
			:beauty="beauty"
			:whiteness="whiteness"
			aspect="9:16"
			@statechange="statechange"
			@netstatus="netstatus"
			@error="error"
			:style="'height: ' + windowHeight + 'px;'"
			style="width: 750rpx;"
		></live-pusher>

		<view v-if="showBars">
			<view style="position: fixed;left: 0;right: 0;height: 500rpx;" :style="'top:' + statusBarHeight + 'px;'">
				<view class="flex align-center justify-center" style="width: 90rpx;height: 90rpx;" @click="back"><text class="iconfont text-white">&#xe607;</text></view>

				<view class="position-absolute rounded p-2 flex align-center" style="left: 90rpx;right: 100rpx;height: 160rpx;background-color: rgba(0,0,0,0.2);">
					<view style="height: 120rpx;width: 120rpx;" class="position-relative rounded" @click="chooseCover">
						<image :src="form.cover || '/static/gift/3.png'" style="height: 120rpx;width: 120rpx;"></image>
						<text class="text-white position-absolute font" style="left: 0;right: 0;bottom: 0;">更换封面</text>
					</view>
					<view class="flex-1 ml-2">
						<input type="text" v-model="form.title" placeholder="请输入直播标题" class="mb-2" />
						<!-- <text class="text-white font">#请选择分类</text> -->
					</view>
				</view>

				<view class="position-absolute right-0 flex flex-column " style="width: 100rpx;">
					<view style="height: 120rpx;width: 100rpx;" class="flex flex-column align-center justify-center" @click="switchCamera">
						<text class="iconfont text-white mb-1">&#xe605;</text>
						<text class="text-white font">翻转</text>
					</view>
					<view style="height: 120rpx;width: 100rpx;" class="flex flex-column align-center justify-center" @click="openPopup('mode')">
						<text class="iconfont text-white mb-1">&#xe60c;</text>
						<text class="text-white font">画质</text>
					</view>
					<view style="height: 120rpx;width: 100rpx;" class="flex flex-column align-center justify-center" @click="openPopup('beauty')">
						<text class="iconfont text-white mb-1">&#xe632;</text>
						<text class="text-white font">美颜</text>
					</view>
					<view style="height: 120rpx;width: 100rpx;" class="flex flex-column align-center justify-center" @click="openPopup('whiteness')">
						<text class="iconfont text-white mb-1">&#xe631;</text>
						<text class="text-white font">美白</text>
					</view>
				</view>
			</view>

			<view
				class="position-fixed bg-main flex align-center justify-center rounded-circle"
				style="left: 100rpx;right: 100rpx;bottom: 100rpx;height: 120rpx;"
				@click="openLiveRoom"
			>
				<text class="text-white font-md">开始视频直播</text>
			</view>

			<uni-popup type="bottom" ref="popup">
				<view class="bg-white">
					<view class="flex align-center justify-center border-bottom" style="height: 90rpx;">
						<text class="font-md">{{ popupTitle }}</text>
					</view>
					<!-- 画质选择 -->
					<view v-if="popupType === 'mode'">
						<view
							class="flex align-center justify-center py-2"
							v-for="(item, index) in modeList"
							:key="index"
							:class="mode === item.type ? 'bg-main' : ''"
							@click="chooseMode(item)"
						>
							<text class="font-md" :class="mode === item.type ? 'text-white' : ''">{{ item.desc }}</text>
						</view>
					</view>
					<!-- 美颜 -->
					<view v-else-if="popupType === 'beauty'"><slider :min="0" :max="9" :step="1" :value="beauty" :block-size="18" show-value @change="handleSliderChange" /></view>
					<!-- 美白 -->
					<view v-else><slider :min="0" :max="9" :step="1" :value="whiteness" :block-size="18" show-value @change="handleSliderChange" /></view>
					<view class="f-divider"></view>
					<view class="flex align-center justify-center" style="height: 90rpx;" hover-class="bg-light" @click="closePopup"><text class="font-md">取消</text></view>
				</view>
			</uni-popup>
		</view>
	</view>
</template>

<script>
import uniPopup from '@/components/uni-ui/uni-popup/uni-popup.vue';
import $H from '@/common/request.js';
import $C from '@/common/config.js';
export default {
	components: {
		uniPopup
	},
	computed: {
		popupTitle() {
			let o = {
				mode: '画质',
				beauty: '美颜',
				whiteness: '美白'
			};
			return o[this.popupType];
		}
	},
	data() {
		return {
			url: '',
			mode: 'SD',
			enableCamera: true,
			position: 'back',
			beauty: 0,
			whiteness: 0,
			windowHeight: 0,
			statusBarHeight: 0,
			context: null,
			modeList: [
				{
					type: 'SD',
					desc: '标清'
				},
				{
					type: 'HD',
					desc: '高清'
				},
				{
					type: 'FHD',
					desc: '超清'
				}
			],
			popupType: 'mode',
			showBars: true,
			form: {
				title: '',
				cover: ''
			}
		};
	},
	onReady() {
		this.context = uni.createLivePusherContext('livePusher', this);
		this.startPreview();
	},
	onLoad() {
		const res = uni.getSystemInfoSync();
		this.windowHeight = res.windowHeight;
		this.statusBarHeight = res.statusBarHeight;
	},
	methods: {
		onBackPress() {
			this.showBars = false;
		},
		closePopup() {
			this.$refs.popup.close();
		},
		// 美颜/美白
		handleSliderChange() {
			this[this.popupType] = e.detail.value;
		},
		// 切换画质
		chooseMode(item) {
			this.mode = item.type;
			uni.showToast({
				title: '画质切换为' + item.desc,
				icon: 'none'
			});
			this.$refs.popup.close();
		},
		// 开启直播
		openLiveRoom() {
			console.log('open');
			$H.post('/live/create', this.form, {
				token: true
			})
				.then(res => {
					let option = JSON.stringify({
						mode: this.mode,
						position: this.position,
						beauty: this.beauty,
						whiteness: this.whiteness
					});
					let data = encodeURIComponent(JSON.stringify(res));
					uni.navigateTo({
						url: '/pages/liveroom/liveroom?option=' + option + '&data=' + data
					});
				})
				.catch(err => {
					console.log(err);
				});
		},
		// 弹窗
		openPopup(type) {
			this.popupType = type;
			this.$refs.popup.open();
		},
		// 切换镜头
		switchCamera() {
			this.context.switchCamera({
				success: e => {
					this.position = this.position === 'back' ? 'front' : 'back';
				}
			});
		},
		// 选择封面
		chooseCover() {
			uni.chooseImage({
				count: 1,
				success: res => {
					$H.upload(
						'/upload',
						{
							filePath: res.tempFilePaths[0]
						},
						p => {
							console.log(p);
						}
					).then(res => {
						this.form.cover = $C.imageUrl + res.url;
					});
				}
			});
		},
		// 开启摄像头预览
		startPreview() {
			this.context.startPreview({
				success: e => {}
			});
		},
		// 直播状态
		statechange(e) {},
		// 直播网络
		netstatus(e) {},
		error(e) {},
		back() {
			uni.navigateBack({
				delta: 1
			});
		}
	}
};
</script>

<style></style>
